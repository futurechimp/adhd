#!/usr/bin/env ruby
require File.dirname(__FILE__) + '/../lib/ext/hash_to_openstruct'
require File.dirname(__FILE__) + '/../lib/adhd/node_manager'
require File.dirname(__FILE__) + '/../lib/adhd/reactor'

require 'optparse'
require 'ftools'
require 'yaml'
# require 'socket'

def parse_config(file)
  @config = YAML.load_openstruct(File.read(file))
end

# @command = ARGV.shift

#options = {}

opts = OptionParser.new do |opts|
  opts.on("-c", "--config C", "YAML config file") do |n|
    puts "Parsing config file #{n}"
    parse_config(n)
  end
end

opts.parse! ARGV

@node_manager = Adhd::NodeManager.new(@config)

# Lets rely on the thin server here...

require 'thin'

class SimpleAdapter
  def call(env)
    body = ["hello!"]
    [
      200,
      { 'Content-Type' => 'text/plain' },
      body
    ]
  end
end

# Start the Thin server within the reactor loop

EM.run {
  # puts "Starting EventMachine reactor loop..."
  # EM.connect @config.node_url, @config.couchdb_server_port, Adhd::DbUpdateNotifier, @node_manager
  timer = EventMachine::PeriodicTimer.new(5) do
    puts "Sync Admin"
    @node_manager.sync_admin
    @node_manager.run
  end
  
  # Start our web server 
  Thin::Server.start(@config.node_url, @config.couchdb_server_port + 1) do
    use Rack::CommonLogger
    map '/test' do
      run SimpleAdapter.new
    end
    map '/files' do
      run Rack::File.new('.')
    end
  end
  

  
}

