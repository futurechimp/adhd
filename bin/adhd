#!/usr/bin/env ruby
require 'optparse'
require 'fileutils'
require 'yaml'

require File.dirname(__FILE__) + '/../lib/ext/hash_to_openstruct'
require File.dirname(__FILE__) + '/../lib/adhd/cluster/node_manager'
require File.dirname(__FILE__) + '/../lib/adhd/reactor'
require File.dirname(__FILE__) + '/../lib/adhd/rest_server'
require File.dirname(__FILE__) + '/../lib/adhd/replication/connection'
require File.dirname(__FILE__) + '/../lib/adhd/replication/notifier'

def parse_config(file)
  @config = YAML.load_openstruct(File.read(file))
end

# @command = ARGV.shift

#options = {}

opts = OptionParser.new do |opts|
  opts.on("-c", "--config C", "YAML config file") do |n|
    puts "Parsing config file #{n}"
    parse_config(n)
  end
end

opts.parse! ARGV

@node_manager = Adhd::NodeManager.new(@config)


# Start the Thin server within the reactor loop

EM.run {
  # puts "Starting EventMachine reactor loop..."
  # EM.connect @config.node_url, @config.couchdb_server_port, Adhd::DbUpdateNotifier, @node_manager
  timer = EventMachine::PeriodicTimer.new(10) do
    # puts "Sync Admin"
    @node_manager.sync_admin
    @node_manager.run
  end


  begin
    # Start the server
    EventMachine::start_server @config.node_url, @config.http_server_port, Adhd::RestServer, @node_manager
  rescue
    puts "Could not start rest server..."
  end


}

